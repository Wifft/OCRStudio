<!-- Copyright (c) Wifft 2023 -->
<!-- Licensed under the MIT License. -->

<Page x:Class="WifftOCR.Views.CaptureAreasPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mux="using:Microsoft.UI.Xaml.Controls"
    xmlns:models="using:WifftOCR.DataModels"
    xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
    mc:Ignorable="d"
    Loaded="Page_Loaded">
    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.ReadCaptureAreasCommand}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>
    
    <Page.Resources>
        <converters:StringVisibilityConverter  x:Key="StringVisibilityConverter"
            EmptyValue="Collapsed"
            NotEmptyValue="Visible" />
        <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToInvertedVisibilityConverter"
            TrueValue="Collapsed"
            FalseValue="Visible" />
    </Page.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
    
        <StackPanel Orientation="Vertical"
             Grid.Row="0">
            <TextBlock Text="Capture areas"
                FontWeight="Bold"
                Style="{StaticResource HeaderTextBlockStyle}"
                Margin="0,0,0,24"/>
        </StackPanel>
        
        <Grid Grid.Row="1">
            <Button x:Uid="AddEntryBtn"
                Height="36"
                Margin="0,0,5,0"
                Grid.Column="0"
                Command="{x:Bind AddAreaCommand}">
                <StackPanel
                    Orientation="Horizontal"
                    Spacing="8">
                    <FontIcon
                        x:Name="Icon"
                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                        FontSize="16"
                        Foreground="{ThemeResource AccentTextFillColorPrimaryBrush}"
                        Glyph="&#xe710;" />
                    <TextBlock x:Uid="AddEntry" 
                        Text="Add area" />
                </StackPanel>
            </Button>

            <StackPanel Padding="0,0,16,0"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <mux:Button x:Uid="FilterBtn"
                    Height="36"
                    Style="{StaticResource SubtleButtonStyle}"
                    AutomationProperties.Name="Filters"
                    mux:ToolTipService.ToolTip="Filters">
                    <mux:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}"
                        FontSize="16"
                        Glyph="&#xe71c;"/>
                    <mux:Button.Flyout>
                        <Flyout>
                            <StackPanel Width="320"
                            HorizontalAlignment="Stretch"
                            Spacing="12">
                                <mux:AutoSuggestBox x:Uid="NameFilter"
                                    QueryIcon="Find"
                                    Header="Name"
                                    Text="{x:Bind ViewModel.NameFilter, Mode=TwoWay}">
                                    <i:Interaction.Behaviors>
                                        <ic:EventTriggerBehavior EventName="TextChanged">
                                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.ApplyFiltersCommand}"/>
                                        </ic:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </mux:AutoSuggestBox>
                                <mux:ToggleSwitch x:Uid="ShowOnlyActives" 
                                    IsOn="{x:Bind ViewModel.ActivesFilter, Mode=TwoWay}"
                                    Header="Show active areas only"/>
                                <mux:Button x:Uid="ClearFiltersBtn"
                                    Margin="0,6,0,0"
                                    HorizontalAlignment="Right"
                                    Content="Clear filters"
                                    Command="{x:Bind ViewModel.ClearFiltersCommand}"
                                    Style="{StaticResource AccentButtonStyle}"/>
                            </StackPanel>
                        </Flyout>
                    </mux:Button.Flyout>
                </mux:Button>
            </StackPanel>
        </Grid>
        
        <StackPanel Grid.Row="2"
            Orientation="Vertical"
            Visibility="Visible"
            Margin="0,16,0,0">
            <mux:InfoBar x:Uid="FileSaveError"
                CornerRadius="0"
                IsOpen="{x:Bind ViewModel.Error, Mode=TwoWay}"
                Severity="Error" 
                Title="Config file save error, please try again."/>
            <mux:InfoBar x:Uid="FileChanged"
                IsOpen="{x:Bind ViewModel.FileChanged, Mode=TwoWay}"
                Severity="Warning"
                Title="Config file changed">
                <InfoBar.ActionButton>
                    <Button x:Uid="Reload"
                        Command="{x:Bind ViewModel.ReadCaptureAreasCommand}" 
                        Content="Reload"/>
                </InfoBar.ActionButton>
            </mux:InfoBar>
        </StackPanel>
        
        <StackPanel Grid.Row="3"
            Margin="0,16,0,16"
            Background="{ThemeResource LayerFillColorDefaultBrush}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1"
            CornerRadius="8"
            Orientation="Vertical"
            Visibility="{x:Bind ViewModel.IsLoading, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <mux:ProgressRing Width="36"
                Height="36"
                Margin="0,16,0,16"/>
            <TextBlock Text="Loading..." 
                HorizontalAlignment="Center"/>
        </StackPanel>
        
        <ListView x:Name="CaptureAreasList"
            x:Uid="CaptureAreasList"
            Grid.Row="3"
            Margin="0,16,0,16"
            Background="{ThemeResource LayerFillColorDefaultBrush}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1"
            CornerRadius="8"
            IsItemClickEnabled="True"
            ItemClick="CaptureAreas_ItemClick"
            ItemsSource="{Binding CaptureAreas, Mode=TwoWay}"
            SelectedItem="{Binding Selected, Mode=TwoWay}"
            Visibility="{x:Bind ViewModel.IsLoading, Converter={StaticResource BoolToInvertedVisibilityConverter}, Mode=OneWay}">
            <ListView.HeaderTemplate>
                <DataTemplate>
                    <Grid Margin="32,16,32,16">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0"
                            Style="{ThemeResource BaseTextBlockStyle}"
                            Text="Name"/>
                        <TextBlock Grid.Column="1"
                            HorizontalAlignment="Right"
                            Style="{ThemeResource BaseTextBlockStyle}"
                            Text="Active?"/>
                    </Grid>
                </DataTemplate>
            </ListView.HeaderTemplate>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="models:CaptureArea">
                    <Grid AutomationProperties.Name="{x:Bind Name, Mode=OneWay}"
                        Background="Transparent"
                        Margin="32,16,32,16"
                        IsRightTapEnabled="True"
                        RightTapped="Grid_RightTapped">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <FlyoutBase.AttachedFlyout>
                            <mux:MenuFlyout>
                                <mux:MenuFlyoutItem x:Uid="MoveUp"
                                    Click="ReorderButtonUp_Click"
                                    IsEnabled="{Binding DataContext.Filtered, ElementName=Page, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                                    Text="Move up">
                                    <mux:MenuFlyoutItem.Icon>
                                        <mux:FontIcon Glyph="&#xE74A;"/>
                                    </mux:MenuFlyoutItem.Icon>
                                </mux:MenuFlyoutItem>
                                <mux:MenuFlyoutItem x:Uid="MoveDown"
                                    Click="ReorderButtonDown_Click"
                                    IsEnabled="{Binding DataContext.Filtered, ElementName=Page, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                                    Text="Move down">
                                    <mux:MenuFlyoutItem.Icon>
                                        <mux:FontIcon Glyph="&#xE74B;"/>
                                    </mux:MenuFlyoutItem.Icon>
                                </mux:MenuFlyoutItem>
                                <mux:MenuFlyoutSeparator/>
                                <mux:MenuFlyoutItem x:Uid="Delete"
                                    Click="Delete_Click"
                                    Icon="Delete"
                                    Text="Delete"/>
                            </mux:MenuFlyout>   
                        </FlyoutBase.AttachedFlyout>
                        <TextBlock
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Text="{x:Bind Name, Mode=OneWay}"
                            TextWrapping="Wrap" />
                        <mux:ToggleSwitch
                            x:Uid="ActiveToggle"
                            Grid.Column="1"
                            Width="40"
                            MinWidth="0"
                            HorizontalAlignment="Right"
                            IsOn="{x:Bind Active, Mode=TwoWay}" />
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        
        <ContentDialog x:Name="CaptureAreaDialog"
            x:Uid="CaptureAreaDialog"
            Loaded="CaptureAreaDialog_Loaded"
            IsPrimaryButtonEnabled="{Binding Valid, Mode=TwoWay}"
            CloseButtonText="Cancel"
            PrimaryButtonStyle="{StaticResource AccentButtonStyle}">
            <ContentDialog.DataContext>
                <models:CaptureArea/>
            </ContentDialog.DataContext>
            <ScrollViewer HorizontalScrollBarVisibility="Auto"
                HorizontalScrollMode="Auto">
                <StackPanel MinWidth="480"
                    Margin="0,12,0,0"
                    HorizontalAlignment="Stretch"
                    Spacing="24">
                    <mux:TextBox x:Uid="Name"
                        IsSpellCheckEnabled="False"
                        Header="Name"
                        Text="{Binding Name,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Text="Location info" 
                        FontSize="20"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <NumberBox Grid.Column="0"
                            Margin="5"
                            Header="X coord"
                            Text="{Binding LocationX,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></NumberBox>
                        <NumberBox Grid.Column="1"
                            Margin="5"
                            Header="Y coord"
                            Text="{Binding LocationY,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></NumberBox>
                    </Grid>
                    <TextBlock Text="Size info" 
                        FontSize="20"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <NumberBox Grid.Column="0"
                            Margin="5"
                            Header="Width"
                            Text="{Binding SizeW,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></NumberBox>
                        <NumberBox Grid.Column="1"
                            Margin="5"
                            Header="Height"
                            Text="{Binding SizeH,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></NumberBox>
                    </Grid>
                    <mux:ToggleSwitch x:Uid="Active"
                        Header="Active?"
                        IsOn="{Binding Active, Mode=TwoWay}"/>
                </StackPanel>
            </ScrollViewer>
        </ContentDialog>
        
        <ContentDialog x:Name="DeleteDialog"
            x:Uid="DeleteDialog"
            PrimaryButtonCommand="{x:Bind DeleteCommand}"
            PrimaryButtonStyle="{StaticResource AccentButtonStyle}"
            PrimaryButtonText="Delete" 
            CloseButtonText="Cancel">
            <TextBlock Text="Are you sure?"/>
        </ContentDialog>
    </Grid>
</Page>
